//
//  main.cpp
//  priorityqueue
//
//  Created by Daxing Gao on 16/10/19.
//  Copyright © 2016年 Daxing Gao. All rights reserved.
//

#include <iostream>
#include<set>
#include<queue>
using namespace std;
bool is_prime(int num){
    for(int i=2; i*i<=num;i++){
        if(num%i==0)return false;
    }
    return true;
}
int count_prime(int num){
    int count=0;
    for(int i=2;i*i<=num;i++){
        if(num%i==0){
        if(is_prime(i))
        count++;
        if(num/i!=i&&is_prime(num/i))count++;
        }
    }
    return count;
}

class Compare{
public:
bool operator()(const int &x, const int &y){
    int px,py;
    px=count_prime(x);
    py=count_prime(y);
    if(px!=py)return px<py;
    return x<y;
}
};

int main(){
    set<int,Compare> pq;
    priority_queue<int,vector<int>,Compare> ppg;
    int n;
    int a[10];
    cin>>n;
    while(n--){
        for(int i=0;i<10;i++){
            cin>>a[i];
            pq.insert(a[i]);
            ppg.push(a[i]);
        }
        int max=*pq.rbegin();
        int min=*pq.begin();
        cout<<*pq.rbegin()<<" "<<*pq.begin()<<endl;
        cout<<ppg.top();
        for(int i=0;i<9;i++){
            ppg.pop();
        }
        cout<<" "<<ppg.top()<<endl;
        pq.erase(max);
        pq.erase(min);
    }
    
    return 0;
}
